{\pard \ql \f0 \sa180 \li0 \fi0 \outlinelevel0 \b \fs36 Cloud Backup Test Setup Plan\par}
{\pard \ql \f0 \sa180 \li0 \fi0 \outlinelevel1 \b \fs32 Test Environment\par}
{\pard \ql \f0 \sa180 \li0 \fi0 \outlinelevel2 \b \fs28 Primary Test Platform (Fedora)\par}
{\pard \ql \f0 \sa180 \li360 \fi-360 \bullet \tx360\tab OS: Fedora Linux\par}
{\pard \ql \f0 \sa180 \li360 \fi-360 \bullet \tx360\tab Test Directory Structure:\par}
{\pard \ql \f0 \sa180 \li360 \fi0 \f1 ~/backup-test/\line
\u9500 ?\u9472 ?\u9472 ? small-files/     # 1000 files < 1MB\line
\u9500 ?\u9472 ?\u9472 ? medium-files/    # 100 files 1-100MB\line
\u9500 ?\u9472 ?\u9472 ? large-files/     # 10 files > 100MB\line
\u9492 ?\u9472 ?\u9472 ? dedup-test/      # Duplicate file variants\sa180\par}
{\pard \ql \f0 \sa180 \li0 \fi0 \outlinelevel1 \b \fs32 Test Cases\par}
{\pard \ql \f0 \sa180 \li0 \fi0 \outlinelevel2 \b \fs28 1. Wasabi (with rclone)\par}
{\pard \ql \f0 \sa180 \li0 \fi0 \outlinelevel3 \b \fs24 Setup Steps\par}
{\pard \ql \f0 \sa180 \li0 \fi0 \f1 # Install rclone\line
sudo dnf install rclone\line
\line
# Configure test directory\line
mkdir -p ~/backup-test/\{small-files,medium-files,large-files,dedup-test\}\line
\line
# Configure rclone (interactive)\line
rclone config\line
\line
# Test connection\line
rclone lsd wasabi:\par}
{\pard \ql \f0 \sa180 \li0 \fi0 \outlinelevel3 \b \fs24 Test Scenarios\par}
{\pard \ql \f0 \sa180 \li360 \fi-360 1.\tx360\tab Basic Upload Test\par}
{\pard \ql \f0 \sa180 \li360 \fi0 \f1 # Time the upload of test files\line
time rclone copy ~/backup-test wasabi:backup-test\par}
{\pard \ql \f0 \sa180 \li360 \fi-360 2.\tx360\tab Deduplication Test\par}
{\pard \ql \f0 \sa180 \li360 \fi0 \f1 # Create duplicate files with minor changes\line
cp ~/backup-test/medium-files/* ~/backup-test/dedup-test/\line
# Modify files slightly\line
# Sync and monitor storage usage\line
rclone sync ~/backup-test wasabi:backup-test\sa180\par}
{\pard \ql \f0 \sa180 \li0 \fi0 \outlinelevel2 \b \fs28 2. SpiderOak One\par}
{\pard \ql \f0 \sa180 \li0 \fi0 \outlinelevel3 \b \fs24 Setup Steps\par}
{\pard \ql \f0 \sa180 \li0 \fi0 \f1 # Download RPM package\line
wget https://spideroak.com/release/spideroak/rpm_x64\line
\line
# Install package\line
sudo dnf install ./spideroak-*.rpm\line
\line
# Initial configuration\line
SpiderOakONE --setup=-\par}
{\pard \ql \f0 \sa180 \li0 \fi0 \outlinelevel3 \b \fs24 Test Scenarios\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 1.\tx360\tab Initial Backup Test\par}
{\pard \ql \f0 \sa0 \li720 \fi-360 \endash \tx360\tab Configure backup set for ~/backup-test\par}
{\pard \ql \f0 \sa0 \li720 \fi-360 \endash \tx360\tab Monitor initial backup performance\par}
{\pard \ql \f0 \sa0 \li720 \fi-360 \endash \tx360\tab Verify completion and integrity\sa180\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 2.\tx360\tab Incremental Backup Test\par}
{\pard \ql \f0 \sa0 \li720 \fi-360 \endash \tx360\tab Modify test files\par}
{\pard \ql \f0 \sa0 \li720 \fi-360 \endash \tx360\tab Monitor incremental backup behavior\par}
{\pard \ql \f0 \sa0 \li720 \fi-360 \endash \tx360\tab Verify version retention\sa180\sa180\par}
{\pard \ql \f0 \sa180 \li0 \fi0 \outlinelevel2 \b \fs28 3. pCloud\par}
{\pard \ql \f0 \sa180 \li0 \fi0 \outlinelevel3 \b \fs24 Setup Steps\par}
{\pard \ql \f0 \sa180 \li0 \fi0 \f1 # Download AppImage\line
wget https://pcloud.com/download_linux.html -O pcloud\line
\line
# Make executable\line
chmod +x pcloud\line
\line
# Run and configure\line
./pcloud\par}
{\pard \ql \f0 \sa180 \li0 \fi0 \outlinelevel3 \b \fs24 Test Scenarios\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 1.\tx360\tab Drive Mount Test\par}
{\pard \ql \f0 \sa0 \li720 \fi-360 \endash \tx360\tab Verify native filesystem mounting\par}
{\pard \ql \f0 \sa0 \li720 \fi-360 \endash \tx360\tab Test file operations through mounted drive\par}
{\pard \ql \f0 \sa0 \li720 \fi-360 \endash \tx360\tab Check extended attribute preservation\sa180\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 2.\tx360\tab Sync Folder Test\par}
{\pard \ql \f0 \sa0 \li720 \fi-360 \endash \tx360\tab Configure ~/backup-test as sync folder\par}
{\pard \ql \f0 \sa0 \li720 \fi-360 \endash \tx360\tab Monitor initial sync\par}
{\pard \ql \f0 \sa0 \li720 \fi-360 \endash \tx360\tab Test file modifications\sa180\sa180\par}
{\pard \ql \f0 \sa180 \li0 \fi0 \outlinelevel2 \b \fs28 4. CrashPlan\par}
{\pard \ql \f0 \sa180 \li0 \fi0 \outlinelevel3 \b \fs24 Setup Steps\par}
{\pard \ql \f0 \sa180 \li0 \fi0 \f1 # Install Java requirement\line
sudo dnf install java-11-openjdk\line
\line
# Download and install CrashPlan\line
wget https://download.crashplan.com/installs/linux/install/CrashPlan.tgz\line
tar -xzf CrashPlan.tgz\line
cd crashplan-install\line
sudo ./install.sh\par}
{\pard \ql \f0 \sa180 \li0 \fi0 \outlinelevel3 \b \fs24 Test Scenarios\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 1.\tx360\tab Backup Set Configuration\par}
{\pard \ql \f0 \sa0 \li720 \fi-360 \endash \tx360\tab Configure backup set for ~/backup-test\par}
{\pard \ql \f0 \sa0 \li720 \fi-360 \endash \tx360\tab Monitor resource usage during initial backup\par}
{\pard \ql \f0 \sa0 \li720 \fi-360 \endash \tx360\tab Test backup throttling settings\sa180\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 2.\tx360\tab Recovery Test\par}
{\pard \ql \f0 \sa0 \li720 \fi-360 \endash \tx360\tab Simulate file deletion\par}
{\pard \ql \f0 \sa0 \li720 \fi-360 \endash \tx360\tab Test restore functionality\par}
{\pard \ql \f0 \sa0 \li720 \fi-360 \endash \tx360\tab Verify file integrity post-restore\sa180\sa180\par}
{\pard \ql \f0 \sa180 \li0 \fi0 \outlinelevel1 \b \fs32 Test Data Generation\par}
{\pard \ql \f0 \sa180 \li0 \fi0 \f1 # Generate test files\line
mkdir -p ~/backup-test/\{small-files,medium-files,large-files,dedup-test\}\line
\line
# Small files (1000 files < 1MB)\line
for i in \{1..1000\}; do\line
    dd if=/dev/urandom of=~/backup-test/small-files/file$i.dat bs=1K count=$((RANDOM % 1000 + 1))\line
done\line
\line
# Medium files (100 files 1-100MB)\line
for i in \{1..100\}; do\line
    dd if=/dev/urandom of=~/backup-test/medium-files/file$i.dat bs=1M count=$((RANDOM % 100 + 1))\line
done\line
\line
# Large files (10 files > 100MB)\line
for i in \{1..10\}; do\line
    dd if=/dev/urandom of=~/backup-test/large-files/file$i.dat bs=1M count=$((RANDOM % 900 + 100))\line
done\par}
{\pard \ql \f0 \sa180 \li0 \fi0 \outlinelevel1 \b \fs32 Success Criteria\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 1.\tx360\tab Basic Functionality\par}
{\pard \ql \f0 \sa0 \li720 \fi-360 \endash \tx360\tab Successful initial backup\par}
{\pard \ql \f0 \sa0 \li720 \fi-360 \endash \tx360\tab Successful incremental updates\par}
{\pard \ql \f0 \sa0 \li720 \fi-360 \endash \tx360\tab Successful file restoration\sa180\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 2.\tx360\tab Performance Metrics\par}
{\pard \ql \f0 \sa0 \li720 \fi-360 \endash \tx360\tab Initial backup speed\par}
{\pard \ql \f0 \sa0 \li720 \fi-360 \endash \tx360\tab Incremental backup speed\par}
{\pard \ql \f0 \sa0 \li720 \fi-360 \endash \tx360\tab Resource usage (CPU, RAM)\sa180\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 3.\tx360\tab Deduplication Efficiency\par}
{\pard \ql \f0 \sa0 \li720 \fi-360 \endash \tx360\tab Storage savings with duplicate files\par}
{\pard \ql \f0 \sa0 \li720 \fi-360 \endash \tx360\tab Storage savings with similar files\sa180\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 4.\tx360\tab Reliability\par}
{\pard \ql \f0 \sa0 \li720 \fi-360 \endash \tx360\tab No failed transfers\par}
{\pard \ql \f0 \sa0 \li720 \fi-360 \endash \tx360\tab Consistent performance\par}
{\pard \ql \f0 \sa0 \li720 \fi-360 \endash \tx360\tab Stable system operation\sa180\sa180\par}
{\pard \ql \f0 \sa180 \li0 \fi0 Next Steps: Proceed to Final Comparison and Decision\par}
